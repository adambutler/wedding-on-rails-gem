#!/usr/bin/env ruby
require 'gli'
require 'commander'
require 'net/http'
require 'json'

begin # XXX: Remove this begin/rescue before distributing your app
require 'wedding_on_rails'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/wedding_on_rails` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/wedding_on_rails now"
  exit 64
end

include GLI::App

program_desc 'Describe your application here'

version WeddingOnRails::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f,:flagname]

desc 'Describe rsvp here'
arg_name 'Describe arguments to rsvp here'
command :rsvp do |c|
  c.desc 'Describe a switch to rsvp'
  c.switch :s

  c.desc 'Describe a flag to rsvp'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|

    uri = URI('http://wedding.dev/events/1/groups/1/guests')
    http = Net::HTTP.new(uri.host, uri.port)
    req =  Net::HTTP::Get.new(uri)
    guests = JSON.parse(http.request(req).body)

    name = ask("What is your full name?")

    guests = guests.select do |guest|
      guest["name"].downcase == name.downcase
    end

    if guests.empty?
      raise "Sorry I couldn't find you :("
    else
      guest = guests.first
    end

    message = "Would you like to change your RSVP?"

    if guest["rsvp"].nil?
      rsvp = "Not yet RSVP'd"
      message = "RSVP now?"
    elsif guest["rsvp"]
      rsvp = "Yes ^_^"
    else
      rsvp = "No"
    end

    puts "\n Hi #{guest["name"]}! Your current RSVP is: #{rsvp}\n\n"

    puts message
    will_rsvp = choose(:yes, :no)

    puts "\n"

    new_rsvp = false

    if will_rsvp == :yes
      choose do |menu|
        menu.choice("Yes I'd love to come") { new_rsvp = true }
        menu.choices("No sorry I can't make it") { new_rsvp = false }
      end

      uri = URI('http://wedding.dev/events/1/groups/1/guests/1')
      http = Net::HTTP.new(uri.host, uri.port)
      data = { "guest[rsvp]" => new_rsvp }
      body = URI.encode_www_form(data)
      req =  Net::HTTP::Put.new(uri)
      req.body = body
      res = http.request(req)

      if res.code == "200"
        puts "\nAll updated: ^_^"
      else
        puts "\nSomething went wrong (#{res.code})"
      end
    end

    # # Your command logic here

    # # If you have any errors, just raise them
    # # raise "that command made no sense"

    # puts "rsvp command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
